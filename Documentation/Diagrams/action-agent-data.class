@startuml
Interface IData
Interface IDataContainer
Interface IDataHandler

Interface IEventHandler
Interface IEventHandlerContext

Class CHandleActionEvent
Interface IAIActionEventHandler
Interface IAIAction

Class CHandleAgentDataEvent
Interface IAIAgent
Interface IAIAgentDataEventHandler

IDataContainer o-- IData
IDataHandler <-- IData

CHandleActionEvent <-- IAIActionEventHandler
IEventHandler <|-- IAIActionEventHandler

CHandleAgentDataEvent <-- IAIAgentDataEventHandler
IEventHandler <|-- IAIAgentDataEventHandler

IEventHandler <-- IEventHandlerContext

IAIAgent o-- IAIAction

Interface IData
{
	CStringId GetDataTypeId() const;
}

Interface IDataContainer
{
	void AddData(unique_ptr<IData> data);
	unique_ptr<IData> RemoveData(CStringId data);
	
	IData& GetDataByTypeId(CStringId dataTypeId);
	IData const& GetDataByTypeId(CStringId dataTypeId) const;
	
	bool Contains(CStringId dataTypeId) const;
}

Interface IDataHandler
{
	void HandleData(IData const& data);
}

Interface IEventHandler<TEvent>
{
	void HandleEvent(IEventHandlerContext<TEvent>& eventContext);
}

Interface IEventHandlerContext<TEvent>
{
	void OnEventHandled();
	TEvent const& GetEvent() const;
}

Class SHandleActionEvent
{
	IDataContainer const& actionDataContainer;
	IDataContainer const& agentDataContainer;
	IDataHandler& agentDataHandler;
}

Interface IAIActionEventHandler
{
	void HandleEvent(IEventHandlerContext<SHandleActionEvent>& eventContext);
}

Interface IAIAction
{
	IDataContainer const& GetActionDataContainer() const;
	IDataContainer& GetActionDataContainer();
}

Class SHandleAgentDataEvent
{
	IAIAgent& agent;
	IData const& data;
}

Interface IAIAgentDataEventHandler
{
	void HandleEvent(IEventHandlerContext<SHandleAgentDataEvent>& eventContext);
}

Interface IAIAgent
{
	IDataContainer const& GetActionDataContainer() const;

	void RegisterAction(unique_ptr<IAIAction> action, IAIActionEventHandler& actionHandler);
	unique_ptr<IAIAction> UnregisterAction(IAIAction& action);
	void ExecuteAction(IAIAction& action);
	
	void RegisterDataHandler(CStringId dataTypeId, IAIAgentDataEventHandler& agentDataHandler);
	void UnregisterDataHandler(CStringId dataTypeId);
	
	U32 GetActionCount() const;
	
	IAIAction& GetAction(U32 actionIndex);
	IAIAction const& GetAction(U32 actionIndex) const;
}

@enduml